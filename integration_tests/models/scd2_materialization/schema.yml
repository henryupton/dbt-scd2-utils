version: 2

models:
  - name: customers_scd2
    tests:
#      - dbt_utils.equality:
#          compare_model: ref('customers_scd2_result_{{ var("iteration", 1) }}')
#          compare_columns:
#            - customer_id
#            - customer_name
#            - email
#            - status
#            - _updated_at
#            - _valid_from
#            - _valid_to
#            - _is_current
#            - _change_type
      
      # SCD2 Data Quality Tests
      - dbt_scd2_utils.one_current_per_key:
          arguments:
            key_columns: [customer_id]
            current_column: _is_current

      - dbt_scd2_utils.no_validity_overlaps:
          arguments:
            key_columns: [customer_id]
            valid_from_column: _valid_from
            valid_to_column: _valid_to

      - dbt_scd2_utils.continuous_validity_windows:
          arguments:
            key_columns: [customer_id]
            valid_from_column: _valid_from
            valid_to_column: _valid_to

      - dbt_scd2_utils.first_record_insert:
          arguments:
            key_columns: [customer_id]
            valid_from_column: _valid_from
            change_type_column: _change_type

      - dbt_scd2_utils.latest_row_is_current:
          arguments:
            key_columns: [customer_id]
            valid_from_column: _valid_from
            current_column: _is_current

      - dbt_scd2_utils.insert_follows_delete:
          arguments:
            key_columns: [customer_id]
            change_type_column: _change_type
            valid_from_column: _valid_from

      - dbt_scd2_utils.no_consecutive_inserts_or_deletes:
          arguments:
            key_columns: [customer_id]
            change_type_column: _change_type
            valid_from_column: _valid_from
